<Activity mc:Ignorable="sap sap2010" x:Class="Main" sap2010:ExpressionActivityEditor.ExpressionActivityEditor="C#" sap:VirtualizedContainerService.HintSize="803,4782" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.Collections;assembly=mscorlib" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.IO</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="813,4717" sap2010:WorkflowViewState.IdRef="Sequence_16">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence sap2010:Annotation.AnnotationText="Check the invoices issued to bankruptcy clients&#xA;&#xA;Check which of the invoices in an Excel file were issued to clients in bankruptcy and calculate the sum of the invoices to be recorded as loss.&#xA;&#xA;Input files:&#xA;&#xA;Invoices (.xlsx)&#xA;Clients (.csv)&#xA;&#xA;--------&#xA;&#xA;File: RPADev-S04P02-CalculatingLossInvoices-Clients.csv&#xA;Sheet Name: RPADev-S04P02-CalculatingLossIn&#xA;Headers &amp; First Row:&#xA;ClientID ClientName IsBankrupt&#xA;1 Unit&amp;Products Inc. TRUE&#xA;&#xA;File: RPADev-S04P02-CalculatingLossInvoices-Invoices.xlsx&#xA;Sheet Name: Sheet1&#xA;Headers &amp; First Row:&#xA;InvoiceID ClientName InvoiceValue&#xA;1 Unit&amp;Products Inc. 100&#xA;&#xA;--------&#xA;&#xA;Target&#xA;Agitude = 750&#xA;Cryptomba = 730&#xA;Epiloo = 2180&#xA;Teamatix = 350&#xA;Travels Print = 570&#xA;Unit&amp;Products Inc. = 1305" DisplayName="Sequence Main" sap:VirtualizedContainerService.HintSize="751,4606" sap2010:WorkflowViewState.IdRef="Sequence_1">
      <Sequence.Variables>
        <Variable x:TypeArguments="sd:DataTable" Name="custTable" />
        <Variable x:TypeArguments="sd:DataTable" Name="custInvoiceTable" />
        <Variable x:TypeArguments="sd:DataTable" Name="mergedDataTable" />
        <Variable x:TypeArguments="x:String" Name="outputString" />
        <Variable x:TypeArguments="scg:Dictionary(x:String, x:Double)" Name="lossTotalDictionary">
          <Variable.Default>
            <mca:CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:Double)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_77">new Dictionary&lt;string, double&gt;()</mca:CSharpValue>
          </Variable.Default>
        </Variable>
        <Variable x:TypeArguments="x:Double" Name="invoiceLossTotal" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence sap2010:Annotation.AnnotationText="The note here is the process for .csv and then the operation for the .xlsx." DisplayName="Sequence Get Data Container" sap:VirtualizedContainerService.HintSize="689,667" sap2010:WorkflowViewState.IdRef="Sequence_13">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:ReadCsvFile PathResource="{x:Null}" sap2010:Annotation.AnnotationText="Read the clients.csv into CustTable." Delimitator="Comma" DelimitatorForViewModel="Comma" DisplayName="Read CSV Clients" FilePath="Data\Input\RPADev-S04P02-CalculatingLossInvoices-Clients.csv" sap:VirtualizedContainerService.HintSize="450,184" sap2010:WorkflowViewState.IdRef="ReadCsvFile_1">
          <ui:ReadCsvFile.DataTable>
            <OutArgument x:TypeArguments="sd:DataTable">
              <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_1">custTable</mca:CSharpReference>
            </OutArgument>
          </ui:ReadCsvFile.DataTable>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ReadCsvFile>
        <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="Read invoices.xlsx into CustInvoiceTable." DisplayName="Excel Application Scope Invoices" sap:VirtualizedContainerService.HintSize="450,309" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" InstanceCachePeriod="3000" WorkbookPath="Data\Input\RPADev-S04P02-CalculatingLossInvoices-Invoices.xlsx">
          <ui:ExcelApplicationScope.Body>
            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Do Invoices Container" sap:VirtualizedContainerService.HintSize="416,168" sap2010:WorkflowViewState.IdRef="Sequence_3">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExcelReadRange AddHeaders="True" DisplayName="Read Range Invoices" sap:VirtualizedContainerService.HintSize="354,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="Sheet1">
                  <ui:ExcelReadRange.DataTable>
                    <OutArgument x:TypeArguments="sd:DataTable">
                      <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_3">custInvoiceTable</mca:CSharpReference>
                    </OutArgument>
                  </ui:ExcelReadRange.DataTable>
                  <ui:ExcelReadRange.Range>
                    <InArgument x:TypeArguments="x:String">
                      <Literal x:TypeArguments="x:String" Value="" />
                    </InArgument>
                  </ui:ExcelReadRange.Range>
                </ui:ExcelReadRange>
              </Sequence>
            </ActivityAction>
          </ui:ExcelApplicationScope.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ExcelApplicationScope>
      </Sequence>
      <Sequence sap2010:Annotation.AnnotationText="Join CustInvoiceTable and CustTable and filter on Bankrupt." DisplayName="Sequence Filter Data" sap:VirtualizedContainerService.HintSize="689,667" sap2010:WorkflowViewState.IdRef="Sequence_14">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:JoinDataTables sap2010:Annotation.AnnotationText="select * from custInvoiceTable&#xA;  join custTable&#xA;    where custTable.ClientName ==&#xA;      custInvoiceTable.ClientName;" DisplayName="Join Data Tables Into MergedDataTable" sap:VirtualizedContainerService.HintSize="388,132" sap2010:WorkflowViewState.IdRef="JoinDataTables_1" JoinType="Inner">
          <ui:JoinDataTables.Arguments>
            <scg:List x:TypeArguments="ui:JoinOperationArgument" Capacity="4">
              <ui:JoinOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EQ">
                <ui:JoinOperationArgument.Column1>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_41">"ClientName"</mca:CSharpValue>
                  </InArgument>
                </ui:JoinOperationArgument.Column1>
                <ui:JoinOperationArgument.Column2>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_42">"ClientName"</mca:CSharpValue>
                  </InArgument>
                </ui:JoinOperationArgument.Column2>
              </ui:JoinOperationArgument>
            </scg:List>
          </ui:JoinDataTables.Arguments>
          <ui:JoinDataTables.DataTable1>
            <InArgument x:TypeArguments="sd:DataTable">
              <mca:CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_37">custInvoiceTable</mca:CSharpValue>
            </InArgument>
          </ui:JoinDataTables.DataTable1>
          <ui:JoinDataTables.DataTable2>
            <InArgument x:TypeArguments="sd:DataTable">
              <mca:CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_38">custTable</mca:CSharpValue>
            </InArgument>
          </ui:JoinDataTables.DataTable2>
          <ui:JoinDataTables.OutputDataTable>
            <OutArgument x:TypeArguments="sd:DataTable">
              <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_12">mergedDataTable</mca:CSharpReference>
            </OutArgument>
          </ui:JoinDataTables.OutputDataTable>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:JoinDataTables>
        <ui:FilterDataTable sap2010:Annotation.AnnotationText="Keep IsBankrupt == &quot;TRUE&quot;" DisplayName="Filter Data Table Keep Bankrupt" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="388,192" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" SelectColumnsMode="Keep">
          <ui:FilterDataTable.DataTable>
            <InArgument x:TypeArguments="sd:DataTable">
              <mca:CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_45">mergedDataTable</mca:CSharpValue>
            </InArgument>
          </ui:FilterDataTable.DataTable>
          <ui:FilterDataTable.Filters>
            <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
              <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                <ui:FilterOperationArgument.Column>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_46">"IsBankrupt"</mca:CSharpValue>
                  </InArgument>
                </ui:FilterOperationArgument.Column>
                <ui:FilterOperationArgument.Operand>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_47">"TRUE"</mca:CSharpValue>
                  </InArgument>
                </ui:FilterOperationArgument.Operand>
              </ui:FilterOperationArgument>
            </scg:List>
          </ui:FilterDataTable.Filters>
          <ui:FilterDataTable.OutputDataTable>
            <OutArgument x:TypeArguments="sd:DataTable">
              <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_13">mergedDataTable</mca:CSharpReference>
            </OutArgument>
          </ui:FilterDataTable.OutputDataTable>
          <ui:FilterDataTable.SelectColumns>
            <scg:List x:TypeArguments="InArgument" Capacity="4">
              <x:Null />
            </scg:List>
          </ui:FilterDataTable.SelectColumns>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:FilterDataTable>
        <ui:SortDataTable ColumnName="{x:Null}" DataColumn="{x:Null}" sap2010:Annotation.AnnotationText="Hardcodeing the sort index to 1.&#xA;Merged header values: InvoiceID, ClientName, InvoiceValue, ClientID, ClientName, IsBankrupt" DisplayName="Sort Data Table" sap:VirtualizedContainerService.HintSize="388,137" sap2010:WorkflowViewState.IdRef="SortDataTable_1" Order="Ascending" SortOrder="Ascending">
          <ui:SortDataTable.ColumnIndex>
            <InArgument x:TypeArguments="s:Nullable(x:Int32)">
              <mca:CSharpValue x:TypeArguments="s:Nullable(x:Int32)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_104">1</mca:CSharpValue>
            </InArgument>
          </ui:SortDataTable.ColumnIndex>
          <ui:SortDataTable.DataTable>
            <InArgument x:TypeArguments="sd:DataTable">
              <mca:CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_100">mergedDataTable</mca:CSharpValue>
            </InArgument>
          </ui:SortDataTable.DataTable>
          <ui:SortDataTable.OutputDataTable>
            <OutArgument x:TypeArguments="sd:DataTable">
              <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_32">mergedDataTable</mca:CSharpReference>
            </OutArgument>
          </ui:SortDataTable.OutputDataTable>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:SortDataTable>
      </Sequence>
      <ui:ForEach x:TypeArguments="sd:DataRow" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="The MergedDataTable will be used to compute the invoice totals." DisplayName="For Each MergedDataTable" sap:VirtualizedContainerService.HintSize="689,1976" sap2010:WorkflowViewState.IdRef="ForEach`1_6">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="sd:DataRow">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="item" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body MergedDataTable Container" sap:VirtualizedContainerService.HintSize="653,1811" sap2010:WorkflowViewState.IdRef="Sequence_8">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="currentCustomer" />
                <Variable x:TypeArguments="x:String" Name="previousCustomer" />
                <Variable x:TypeArguments="x:Double" Name="lossValueTotal" />
                <Variable x:TypeArguments="x:Double" Name="invoiceValue" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:GetRowItem Column="{x:Null}" ColumnIndex="{x:Null}" sap2010:Annotation.AnnotationText="We need to track the customer value in each row to determine when the customer changes since the totals are by customer.&#xA;&#xA;Important!&#xA;I have noticed that the column, number and name selection gets cleared.  Selecting the Name radio button will populate the &quot;ClientName&quot; in the input text area.  This appears to only be a visual bug." ColumnName="ClientName" DisplayName="Get Row Item ClientName" sap:VirtualizedContainerService.HintSize="611,302" sap2010:WorkflowViewState.IdRef="GetRowItem_2">
                <ui:GetRowItem.Row>
                  <InArgument x:TypeArguments="sd:DataRow">
                    <mca:CSharpValue x:TypeArguments="sd:DataRow" sap2010:WorkflowViewState.IdRef="CSharpValue`1_49">item</mca:CSharpValue>
                  </InArgument>
                </ui:GetRowItem.Row>
                <ui:GetRowItem.Value>
                  <OutArgument x:TypeArguments="x:String">
                    <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_15">currentCustomer</mca:CSharpReference>
                  </OutArgument>
                </ui:GetRowItem.Value>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:GetRowItem>
              <If sap2010:Annotation.AnnotationText="This case is when the current row is different than the previous one.  In the first iteration the CurrentCustomer variable will be set and the PreviousCustomer will be blank, thus not equal." DisplayName="If New Customer Row Found" sap:VirtualizedContainerService.HintSize="611,570" sap2010:WorkflowViewState.IdRef="If_3">
                <If.Condition>
                  <InArgument x:TypeArguments="x:Boolean">
                    <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_51">currentCustomer != previousCustomer</mca:CSharpValue>
                  </InArgument>
                </If.Condition>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="Sequence If New Customer Container" sap:VirtualizedContainerService.HintSize="304,336" sap2010:WorkflowViewState.IdRef="Sequence_9">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap2010:Annotation.AnnotationText="Set the previous customer during the first record of a new customer." DisplayName="Assign Update CurrentCustomer" sap:VirtualizedContainerService.HintSize="262,102" sap2010:WorkflowViewState.IdRef="Assign_1">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">
                          <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_19">previousCustomer</mca:CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">
                          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_54">currentCustomer</mca:CSharpValue>
                        </InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                    <Assign sap2010:Annotation.AnnotationText="Reset the LossTotalValue value when the customer account changes." DisplayName="Assign Reset LossValueTotal" sap:VirtualizedContainerService.HintSize="262,102" sap2010:WorkflowViewState.IdRef="Assign_2">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Double">
                          <mca:CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_16">lossValueTotal</mca:CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Double">0</InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                  </Sequence>
                </If.Then>
              </If>
              <Sequence sap2010:Annotation.AnnotationText="The InvoiceValue is the target data point for the project." DisplayName="Sequence Add Invoice Value" sap:VirtualizedContainerService.HintSize="611,767" sap2010:WorkflowViewState.IdRef="Sequence_11">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:GetRowItem Column="{x:Null}" ColumnIndex="{x:Null}" sap2010:Annotation.AnnotationText="Again, the column, number and name selection gets cleared.  Selecting the Name radio button will populate the &quot;Invoicevalue&quot; in the input text area.  This appears to only be a visual bug." ColumnName="InvoiceValue" DisplayName="Get Row Item InvoiceValue" sap:VirtualizedContainerService.HintSize="569,242" sap2010:WorkflowViewState.IdRef="GetRowItem_6">
                  <ui:GetRowItem.Row>
                    <InArgument x:TypeArguments="sd:DataRow">
                      <mca:CSharpValue x:TypeArguments="sd:DataRow" sap2010:WorkflowViewState.IdRef="CSharpValue`1_64">item</mca:CSharpValue>
                    </InArgument>
                  </ui:GetRowItem.Row>
                  <ui:GetRowItem.Value>
                    <OutArgument x:TypeArguments="x:Double">
                      <mca:CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_27">invoiceValue</mca:CSharpReference>
                    </OutArgument>
                  </ui:GetRowItem.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:GetRowItem>
                <If sap2010:Annotation.AnnotationText="LossTotalDictionary will hold the customer and invoice value.  The dictionary is initialized in the variables pane but not populated with any data.&#xA;LossTotalDictionary&lt;String, Double&gt;&#xA;&#xA;After this code block the LossTotalDictionary will contain one element for each customer and the total invoice value." DisplayName="If LossTotalDictionary Populate" sap:VirtualizedContainerService.HintSize="569,362" sap2010:WorkflowViewState.IdRef="If_4">
                  <If.Condition>
                    <InArgument x:TypeArguments="x:Boolean">
                      <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_68">lossTotalDictionary.ContainsKey(currentCustomer)</mca:CSharpValue>
                    </InArgument>
                  </If.Condition>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Assign sap2010:Annotation.AnnotationText="Case that the key exists and the value needs to be added to the dictionary." DisplayName="Assign LossTotal Dictionary Update" sap:VirtualizedContainerService.HintSize="262,102" sap2010:WorkflowViewState.IdRef="Assign_6">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Double">
                          <mca:CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_28">lossTotalDictionary[currentCustomer]</mca:CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Double">
                          <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_67">lossTotalDictionary[currentCustomer] + invoiceValue</mca:CSharpValue>
                        </InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                  </If.Then>
                  <If.Else>
                    <Assign sap2010:Annotation.AnnotationText="Case the the key does not exist." DisplayName="Assign LossTotalDictionary New Key" sap:VirtualizedContainerService.HintSize="262,91" sap2010:WorkflowViewState.IdRef="Assign_7">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Double">
                          <mca:CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_29">lossTotalDictionary[currentCustomer]</mca:CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Double">
                          <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_83">invoiceValue</mca:CSharpValue>
                        </InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                  </If.Else>
                </If>
              </Sequence>
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
        <ui:ForEach.Values>
          <InArgument x:TypeArguments="sc:IEnumerable">
            <mca:CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_48">mergedDataTable.Rows</mca:CSharpValue>
          </InArgument>
        </ui:ForEach.Values>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEach>
      <ui:ForEach x:TypeArguments="scg:KeyValuePair(x:String, x:Double)" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Iterate through the LossTotalDictionary to report the data.  Also, keep track of the invoice value in the invoiceLossTotal variable for extra credit.&#xA;&#xA;This ForEach loop TypeArgument must be set to the System.Collections.Generic.KeyValuePair." DisplayName="For Each LossTotalDictionary" sap:VirtualizedContainerService.HintSize="689,489" sap2010:WorkflowViewState.IdRef="ForEach`1_9">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="scg:KeyValuePair(x:String, x:Double)">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="scg:KeyValuePair(x:String, x:Double)" Name="item" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body LossTotalDictionary Container" sap:VirtualizedContainerService.HintSize="304,253" sap2010:WorkflowViewState.IdRef="Sequence_15">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign InvoiceLossTotal" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Double">
                    <mca:CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_33">invoiceLossTotal</mca:CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Double">
                    <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_105">invoiceLossTotal + item.Value</mca:CSharpValue>
                  </InArgument>
                </Assign.Value>
              </Assign>
              <WriteLine DisplayName="Write Line Key &amp; Value" sap:VirtualizedContainerService.HintSize="262,61" sap2010:WorkflowViewState.IdRef="WriteLine_3">
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_99">item.Key.ToString() + " " + item.Value.ToString()</mca:CSharpValue>
                </InArgument>
              </WriteLine>
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
        <ui:ForEach.Values>
          <InArgument x:TypeArguments="sc:IEnumerable">
            <mca:CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_95">lossTotalDictionary</mca:CSharpValue>
          </InArgument>
        </ui:ForEach.Values>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEach>
      <WriteLine DisplayName="Write Line InvoiceLossTotal" sap:VirtualizedContainerService.HintSize="689,61" sap2010:WorkflowViewState.IdRef="WriteLine_4">
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_107">"The total amount lost from all invoices: " + invoiceLossTotal.ToString()</mca:CSharpValue>
        </InArgument>
      </WriteLine>
    </Sequence>
  </Sequence>
</Activity>